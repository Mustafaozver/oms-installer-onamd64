body{
	background-color: black;
	color: white;
}


div.spinnerpanel {
	display: block;
	left: 0;
	top: 0;
	position: fixed;
	z-index: 200000;
	width: 100%;
	height: 100%;
	background-color: #353538
}

div.spinnerpanel span.loader1 {
	border: 20px solid rgba(128, 128, 144, .3137254902);
	border-radius: 50%;
	border-top: 20px solid rgba(248, 249, 251, .6901960784);
	border-bottom: 20px solid rgba(248, 249, 251, .6901960784);
	width: 150px;
	height: 150px;
	-webkit-animation: spin1 1.7s linear infinite;
	animation: spin1 1.7s linear infinite;
	position: absolute;
	left: calc(50% - 75px)
}

div.spinnerpanel span.loader2 {
	border: 10px solid rgba(128, 128, 144, .3137254902);
	border-top: 10px solid rgba(248, 249, 251, .6901960784);
	border-radius: 50%;
	width: 160px;
	height: 160px;
	-webkit-animation: spin1 2.3s linear infinite;
	animation: spin1 2.3s linear infinite;
	position: absolute;
	left: calc(50% - 80px)
}

div.spinnerpanel span.loader3 {
	border: 40px solid rgba(248, 249, 251, .6901960784);
	border-top: 40px solid rgba(128, 128, 144, .3137254902);
	border-radius: 50%;
	width: 140px;
	height: 140px;
	-webkit-animation: spin3 1.3s linear infinite;
	animation: spin3 1.3s linear infinite;
	position: absolute;
	left: calc(50% - 70px)
}

div.spinnerpanel span.loader4 {
	border: 60px solid rgba(128, 128, 144, 0);
	border-radius: 50%;
	border-top: 60px solid rgba(248, 249, 251, .6901960784);
	border-bottom: 60px solid rgba(248, 249, 251, .6901960784);
	background-color: rgba(128, 128, 144, .3137254902);
	width: 140px;
	height: 140px;
	-webkit-animation: spin3 1.1s linear infinite;
	animation: spin3 1.1s linear infinite;
	position: absolute;
	left: calc(50% - 70px)
}

@-webkit-keyframes spin1 {
	0% {
		-webkit-transform: rotate(360deg)
	}

	100% {
		-webkit-transform: rotate(0deg)
	}
}

@keyframes spin1 {
	0% {
		transform: rotate(360deg)
	}

	100% {
		transform: rotate(0deg)
	}
}

@-webkit-keyframes spin2 {
	0% {
		-webkit-transform: rotate(0deg)
	}

	100% {
		-webkit-transform: rotate(360deg)
	}
}

@keyframes spin2 {
	0% {
		transform: rotate(0deg)
	}

	100% {
		transform: rotate(360deg)
	}
}

@-webkit-keyframes spin3 {
	0% {
		-webkit-transform: rotate(0deg)
	}

	100% {
		-webkit-transform: rotate(360deg)
	}
}

@keyframes spin3 {
	0% {
		transform: rotate(0deg)
	}

	100% {
		transform: rotate(360deg)
	}
}







/**
 * Copyright (c) 2014 The xterm.js authors. All rights reserved.
 * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)
 * https://github.com/chjj/term.js
 * @license MIT
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * Originally forked from (with the author's permission):
 *   Fabrice Bellard's javascript vt100 for jslinux:
 *   http://bellard.org/jslinux/
 *   Copyright (c) 2011 Fabrice Bellard
 *   The original design remains. The terminal itself
 *   has been extended to include xterm CSI codes, among
 *   other features.
 */

/**
 *  Default styles for xterm.js
 */

.xterm {
    cursor: text;
    position: relative;
    user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
}

.xterm.focus,
.xterm:focus {
    outline: none;
}

.xterm .xterm-helpers {
    position: absolute;
    top: 0;
    /**
     * The z-index of the helpers must be higher than the canvases in order for
     * IMEs to appear on top.
     */
    z-index: 5;
}

.xterm .xterm-helper-textarea {
    padding: 0;
    border: 0;
    margin: 0;
    /* Move textarea out of the screen to the far left, so that the cursor is not visible */
    position: absolute;
    opacity: 0;
    left: -9999em;
    top: 0;
    width: 0;
    height: 0;
    z-index: -5;
    /** Prevent wrapping so the IME appears against the textarea at the correct position */
    white-space: nowrap;
    overflow: hidden;
    resize: none;
}

.xterm .composition-view {
    /* TODO: Composition position got messed up somewhere */
    background: #000;
    color: #FFF;
    display: none;
    position: absolute;
    white-space: nowrap;
    z-index: 1;
}

.xterm .composition-view.active {
    display: block;
}

.xterm .xterm-viewport {
    /* On OS X this is required in order for the scroll bar to appear fully opaque */
    background-color: #000;
    overflow-y: scroll;
    cursor: default;
    position: absolute;
    right: 0;
    left: 0;
    top: 0;
    bottom: 0;
}

.xterm .xterm-screen {
    position: relative;
}

.xterm .xterm-screen canvas {
    position: absolute;
    left: 0;
    top: 0;
}

.xterm .xterm-scroll-area {
    visibility: hidden;
}

.xterm-char-measure-element {
    display: inline-block;
    visibility: hidden;
    position: absolute;
    top: 0;
    left: -9999em;
    line-height: normal;
}

.xterm.enable-mouse-events {
    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */
    cursor: default;
}

.xterm.xterm-cursor-pointer,
.xterm .xterm-cursor-pointer {
    cursor: pointer;
}

.xterm.column-select.focus {
    /* Column selection mode */
    cursor: crosshair;
}

.xterm .xterm-accessibility,
.xterm .xterm-message {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    z-index: 10;
    color: transparent;
    pointer-events: none;
}

.xterm .live-region {
    position: absolute;
    left: -9999px;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

.xterm-dim {
    /* Dim should not apply to background, so the opacity of the foreground color is applied
     * explicitly in the generated class and reset to 1 here */
    opacity: 1 !important;
}

.xterm-underline-1 { text-decoration: underline; }
.xterm-underline-2 { text-decoration: double underline; }
.xterm-underline-3 { text-decoration: wavy underline; }
.xterm-underline-4 { text-decoration: dotted underline; }
.xterm-underline-5 { text-decoration: dashed underline; }

.xterm-overline {
    text-decoration: overline;
}

.xterm-overline.xterm-underline-1 { text-decoration: overline underline; }
.xterm-overline.xterm-underline-2 { text-decoration: overline double underline; }
.xterm-overline.xterm-underline-3 { text-decoration: overline wavy underline; }
.xterm-overline.xterm-underline-4 { text-decoration: overline dotted underline; }
.xterm-overline.xterm-underline-5 { text-decoration: overline dashed underline; }

.xterm-strikethrough {
    text-decoration: line-through;
}

.xterm-screen .xterm-decoration-container .xterm-decoration {
	z-index: 6;
	position: absolute;
}

.xterm-screen .xterm-decoration-container .xterm-decoration.xterm-decoration-top-layer {
	z-index: 7;
}

.xterm-decoration-overview-ruler {
    z-index: 8;
    position: absolute;
    top: 0;
    right: 0;
    pointer-events: none;
}

.xterm-decoration-top {
    z-index: 2;
    position: relative;
}
